<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- property name="location">
			<value>classpath:config.properties</value>
		</property-->
		
		<property name="SystemLocation"><value/></property>
			
	</bean>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.**" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	
	<!-- 拦截器，用于处理权限。拦截器顺序不要轻易改变 ,拦截器执行顺序为先进后出-->
	<!-- 系统拦截器作用顺序：
		记录请求时间 A1
		记录请求内容 B1
		执行用户ip、时效鉴权 用户功能鉴权 C1
		数据拦截 D1
		各服务的拦截器 E1
		执行服务分发 F1
		记录应答结果内容 记录服务日志 B3
		记录应答时间 A3
	 -->
	<mvc:interceptors>
		<bean class="com.kevin.iesutdio.kfgis.web.framework.interceptor.Perf4jInterceptor"/>
		<bean class="com.kevin.iesutdio.kfgis.web.framework.interceptor.LogInterceptor"/>
		<bean class=" cn.com.cennavi.kfgis.framework.interceptor.SystemInterceptor"/>
<!-- 		<bean class="cn.com.cennavi.kfgis.framework.auth.AuthInterceptor" />
 -->		
	</mvc:interceptors>

	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 用于开启 header中application/xml 的支持 true为不支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 默认请求类型为json -->
		<property name="defaultContentType" value="application/xml" /><!-- application/json -->
		
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<!-- 用于开启 /gis/123?format=json 的支持 false为不支持 -->
		<property name="favorParameter" value="true" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/" />
					<property name="suffix" value=""></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- for application/xml -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="autodetectAnnotations" >
							    <value>true</value>
							</property>
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" 
		p:basename="i18n/messages" /> -->

	<!-- Mapping exception to the handler view -->
	<!-- <bean id="exceptionResolver"
		class="cn.com.cennavi.bmw.common.resolver.BMWHttpServerCodeExceptionResolver">
	</bean> -->
	
	<bean id="exceptionResolver"
		class="com.kevin.iesutdio.kfgis.web.framework.resolver.BaseServerCodeExceptionResolver">
	</bean>
	
	<!-- 数据库和iBatis的配置 -->
	<!-- import resource="spring-db.xml"/-->
	<!-- 该配置文件由于是在Listener中加载 不能使用模板方式加载，需要单独加载 
	<import resource="conf/spring-framework.xml"/>
	-->
	<!-- 模板BEAN配置 
	<import resource="conf/spring-*.xml" />
	-->
</beans>